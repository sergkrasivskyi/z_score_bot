import asyncio
from apscheduler.schedulers.asyncio import AsyncIOScheduler
from bot.data_processing.data_672 import process_assets
import logging

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ª–æ–≥—É–≤–∞–Ω–Ω—è
LOG_FILE = "zscore_bot_run.log"
logging.basicConfig(
    filename=LOG_FILE,
    level=logging.INFO,
    format="%(asctime)s - %(levelname)s - %(message)s",
    datefmt="%Y-%m-%d %H:%M:%S",
    encoding="utf-8",
)

async def main():
    """
    –ì–æ–ª–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è –¥–ª—è –∑–∞–ø—É—Å–∫—É –∑–∞–¥–∞—á: —Ä–∞–∑–æ–≤–∏–π –∑–∞–ø—É—Å–∫ —ñ —Ä–æ–∑–∫–ª–∞–¥.
    """
    scheduler = AsyncIOScheduler()

    # –ó–∞–ø—É—Å–∫ —Ä–æ–∑–∫–ª–∞–¥—É
    scheduler.add_job(process_assets, "cron", minute="0,15,30,45")
    scheduler.start()

    # –õ–æ–≥ –ø–æ—á–∞—Ç–∫—É —Ä–æ–±–æ—Ç–∏
    logging.info("üìÖ –†–æ–∑–∫–ª–∞–¥ –∑–∞–≤–¥–∞–Ω—å –∑–∞–ø—É—â–µ–Ω–æ: –∫–æ–∂–Ω—ñ 15 —Ö–≤–∏–ª–∏–Ω.")

    # –û–¥–Ω–æ—Ä–∞–∑–æ–≤–∏–π –∑–∞–ø—É—Å–∫ –ø–µ—Ä–µ–¥ —Ä–æ–∑–∫–ª–∞–¥–æ–º
    print("üîÑ –í–∏–∫–æ–Ω–∞–Ω–Ω—è –ø–µ—Ä—à–æ–≥–æ –∑–∞–≤–¥–∞–Ω–Ω—è...")
    logging.info("üîÑ –í–∏–∫–æ–Ω–∞–Ω–Ω—è –ø–µ—Ä—à–æ–≥–æ –∑–∞–≤–¥–∞–Ω–Ω—è...")
    try:
        await process_assets()
        logging.info("‚úÖ –ü–µ—Ä—à–µ –∑–∞–≤–¥–∞–Ω–Ω—è –≤–∏–∫–æ–Ω–∞–Ω–æ —É—Å–ø—ñ—à–Ω–æ.")
        print("‚úÖ –ü–µ—Ä—à–µ –∑–∞–≤–¥–∞–Ω–Ω—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ.")
    except Exception as e:
        logging.error(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥ —á–∞—Å –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –ø–µ—Ä—à–æ–≥–æ –∑–∞–≤–¥–∞–Ω–Ω—è: {e}")
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞: {e}")

    print("üìÖ –û—á—ñ–∫—É–≤–∞–Ω–Ω—è –Ω–∞—Å—Ç—É–ø–Ω–∏—Ö –∑–∞–≤–¥–∞–Ω—å –∑–∞ —Ä–æ–∑–∫–ª–∞–¥–æ–º...")
    try:
        await asyncio.Event().wait()  # –ë–µ–∑–∫—ñ–Ω–µ—á–Ω–µ –æ—á—ñ–∫—É–≤–∞–Ω–Ω—è
    except (KeyboardInterrupt, SystemExit):
        logging.info("‚ùå –ü—Ä–æ–≥—Ä–∞–º–∞ –∑—É–ø–∏–Ω–µ–Ω–∞ –≤—Ä—É—á–Ω—É.")
        print("‚ùå –ó—É–ø–∏–Ω–∫–∞ –ø—Ä–æ–≥—Ä–∞–º–∏.")
        scheduler.shutdown()

if __name__ == "__main__":
    print("üîÑ –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≥—Ä–∞–º–∏...")
    logging.info("üîÑ –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≥—Ä–∞–º–∏...")
    asyncio.run(main())
